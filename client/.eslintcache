[{"C:\\Users\\jonat\\OneDrive\\Documents\\yelp\\client\\src\\components\\Header.tsx":"1","C:\\Users\\jonat\\OneDrive\\Documents\\yelp\\client\\src\\routes\\Home.tsx":"2","C:\\Users\\jonat\\OneDrive\\Documents\\yelp\\client\\src\\components\\AddRestaurant.tsx":"3","C:\\Users\\jonat\\OneDrive\\Documents\\yelp\\client\\src\\routes\\RestaurantDetailPage.tsx":"4","C:\\Users\\jonat\\OneDrive\\Documents\\yelp\\client\\src\\components\\RestaurantList.tsx":"5","C:\\Users\\jonat\\OneDrive\\Documents\\yelp\\client\\src\\App.tsx":"6","C:\\Users\\jonat\\OneDrive\\Documents\\yelp\\client\\src\\routes\\UpdatePage.tsx":"7","C:\\Users\\jonat\\OneDrive\\Documents\\yelp\\client\\src\\contexts\\RestaurantsContexts.tsx":"8","C:\\Users\\jonat\\OneDrive\\Documents\\yelp\\client\\src\\apis\\RestaurantFinder.tsx":"9","C:\\Users\\jonat\\OneDrive\\Documents\\yelp\\client\\src\\index.tsx":"10","C:\\Users\\jonat\\OneDrive\\Documents\\yelp\\client\\src\\components\\UpdateRestaurant.tsx":"11","C:\\Users\\jonat\\OneDrive\\Documents\\yelp\\client\\src\\components\\StarRating.tsx":"12","C:\\Users\\jonat\\OneDrive\\Documents\\yelp\\client\\src\\components\\Reviews.tsx":"13","C:\\Users\\jonat\\OneDrive\\Documents\\yelp\\client\\src\\components\\AddReview.tsx":"14"},{"size":234,"mtime":1611086049483,"results":"15","hashOfConfig":"16"},{"size":396,"mtime":1611090921998,"results":"17","hashOfConfig":"16"},{"size":2300,"mtime":1611144834944,"results":"18","hashOfConfig":"16"},{"size":1659,"mtime":1611168058883,"results":"19","hashOfConfig":"16"},{"size":3387,"mtime":1611164751820,"results":"20","hashOfConfig":"16"},{"size":976,"mtime":1611091507591,"results":"21","hashOfConfig":"16"},{"size":330,"mtime":1611146765319,"results":"22","hashOfConfig":"16"},{"size":1093,"mtime":1611151694981,"results":"23","hashOfConfig":"16"},{"size":122,"mtime":1611091851256,"results":"24","hashOfConfig":"16"},{"size":154,"mtime":1611132459110,"results":"25","hashOfConfig":"16"},{"size":2435,"mtime":1611149007032,"results":"26","hashOfConfig":"16"},{"size":568,"mtime":1611157645560,"results":"27","hashOfConfig":"16"},{"size":928,"mtime":1611158458481,"results":"28","hashOfConfig":"16"},{"size":2477,"mtime":1611169436341,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"1mx66ql",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},"C:\\Users\\jonat\\OneDrive\\Documents\\yelp\\client\\src\\components\\Header.tsx",["63"],"import React from \"react\";\r\n\r\ninterface headerProps {}\r\n\r\nexport const Header: React.FC<headerProps> = ({}) => {\r\n  return (\r\n    <h1 className=\"font-weight-light display-1 text-center\">\r\n      Restaurant Finder\r\n    </h1>\r\n  );\r\n};\r\n","C:\\Users\\jonat\\OneDrive\\Documents\\yelp\\client\\src\\routes\\Home.tsx",["64"],"C:\\Users\\jonat\\OneDrive\\Documents\\yelp\\client\\src\\components\\AddRestaurant.tsx",["65"],"C:\\Users\\jonat\\OneDrive\\Documents\\yelp\\client\\src\\routes\\RestaurantDetailPage.tsx",["66","67"],"import React, { useEffect, useContext } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport RestaurantFinder from \"../apis/RestaurantFinder\";\r\nimport { AddReview } from \"../components/AddReview\";\r\nimport { Reviews } from \"../components/Reviews\";\r\nimport { StarRating } from \"../components/StarRating\";\r\nimport { RestaurantsContext } from \"../contexts/RestaurantsContexts\";\r\n\r\ninterface RestaurantDetailPageProps {}\r\n\r\nexport const RestaurantDetailPage: React.FC<RestaurantDetailPageProps> = ({}) => {\r\n  const { id } = useParams<any>();\r\n  const { selectedRestaurant, setSelectedRestaurant } = useContext(\r\n    RestaurantsContext\r\n  );\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const response = await RestaurantFinder.get(`/${id}`);\r\n        console.log(response);\r\n        setSelectedRestaurant(response.data.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    })();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {selectedRestaurant && (\r\n        <>\r\n          <h1 className=\"text-center display-1\">\r\n            {selectedRestaurant.restaurant.name}\r\n          </h1>\r\n          <div className=\"text-center\">\r\n            <StarRating rating={selectedRestaurant.restaurant.average_rating} />\r\n            <span className=\"text-warning ml-1\">\r\n              {selectedRestaurant.restaurant.count\r\n                ? `(${selectedRestaurant.restaurant.count})`\r\n                : \"(0)\"}\r\n            </span>\r\n          </div>\r\n          <div className=\"mt-3\">\r\n            <Reviews reviews={selectedRestaurant.reviews} />\r\n            <AddReview />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\jonat\\OneDrive\\Documents\\yelp\\client\\src\\components\\RestaurantList.tsx",["68","69","70","71"],"import { spawn } from \"child_process\";\r\nimport React, { useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RestaurantFinder from \"../apis/RestaurantFinder\";\r\nimport { RestaurantsContext } from \"../contexts/RestaurantsContexts\";\r\nimport { StarRating } from \"./StarRating\";\r\n\r\ninterface RestaurantListProps {}\r\n\r\nexport const RestaurantList: React.FC<RestaurantListProps> = ({}) => {\r\n  const { restaurants, setRestaurants } = useContext(RestaurantsContext);\r\n  let history = useHistory();\r\n  console.log(restaurants);\r\n  useEffect(() => {\r\n    (async function () {\r\n      try {\r\n        const response = await RestaurantFinder.get(\"/\");\r\n        setRestaurants(response.data.data.restaurants);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const handleDelete = async (e: any, id: number) => {\r\n    e.stopPropagation();\r\n    try {\r\n      const response = await RestaurantFinder.delete(`/${id}`);\r\n      setRestaurants(\r\n        restaurants.filter((restaurant: any) => {\r\n          return restaurant.id !== id;\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleUpdate = async (e: any, id: number) => {\r\n    e.stopPropagation();\r\n    history.push(`/restaurants/${id}/update`);\r\n  };\r\n\r\n  const handleRestaurantSelect = (id: number) => {\r\n    history.push(`restaurants/${id}`);\r\n  };\r\n\r\n  const renderRating = (restaurant: any) => {\r\n    if (!restaurant.count) {\r\n      return <span className=\"text-warning\">0 reviews</span>;\r\n    } else {\r\n      return (\r\n        <>\r\n          <StarRating rating={restaurant.average_rating} />\r\n          <span className=\"text-warning ml-1\">({restaurant.count})</span>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"list-group\">\r\n      <table className=\"table table-hover table-dark\">\r\n        <thead>\r\n          <tr className=\"bg-primary\">\r\n            <th scope=\"col\">Restaurant</th>\r\n            <th scope=\"col\">Location</th>\r\n            <th scope=\"col\">Price Range</th>\r\n            <th scope=\"col\">Ratings</th>\r\n            <th scope=\"col\">Edit</th>\r\n            <th scope=\"col\">Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {restaurants &&\r\n            restaurants.map((restaurant: any) => {\r\n              return (\r\n                <tr\r\n                  onClick={() => handleRestaurantSelect(restaurant.id)}\r\n                  key={restaurant.id}\r\n                >\r\n                  <td>{restaurant.name}</td>\r\n                  <td>{restaurant.location}</td>\r\n                  <td>{\"$\".repeat(restaurant.price_range)}</td>\r\n                  <td>{renderRating(restaurant)}</td>\r\n                  <td>\r\n                    <button\r\n                      onClick={(e) => handleUpdate(e, restaurant.id)}\r\n                      className=\"btn btn-warning\"\r\n                    >\r\n                      Update\r\n                    </button>\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      onClick={(e) => handleDelete(e, restaurant.id)}\r\n                      className=\"btn btn-danger\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\jonat\\OneDrive\\Documents\\yelp\\client\\src\\App.tsx",["72","73","74"],"C:\\Users\\jonat\\OneDrive\\Documents\\yelp\\client\\src\\routes\\UpdatePage.tsx",["75"],"C:\\Users\\jonat\\OneDrive\\Documents\\yelp\\client\\src\\contexts\\RestaurantsContexts.tsx",[],"C:\\Users\\jonat\\OneDrive\\Documents\\yelp\\client\\src\\apis\\RestaurantFinder.tsx",[],"C:\\Users\\jonat\\OneDrive\\Documents\\yelp\\client\\src\\index.tsx",[],"C:\\Users\\jonat\\OneDrive\\Documents\\yelp\\client\\src\\components\\UpdateRestaurant.tsx",["76","77","78"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport RestaurantFinder from \"../apis/RestaurantFinder\";\r\n\r\ninterface UpdateRestaurantProps {}\r\n\r\nexport const UpdateRestaurant: React.FC<UpdateRestaurantProps> = ({}) => {\r\n  const { id } = useParams<any>();\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [location, setLocation] = useState<string>(\"\");\r\n  const [priceRange, setPriceRange] = useState<string>(\"\");\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const response = await RestaurantFinder.get(`/${id}`);\r\n        setName(response.data.data.restaurant.name);\r\n        setLocation(response.data.data.restaurant.location);\r\n        setPriceRange(response.data.data.restaurant.price_range);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    const updatedRestaurant = await RestaurantFinder.put(`/${id}`, {\r\n      name: name,\r\n      location: location,\r\n      price_range: priceRange,\r\n    });\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <div>\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            id=\"name\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"location\">Location</label>\r\n          <input\r\n            value={location}\r\n            onChange={(e) => setLocation(e.target.value)}\r\n            id=\"location\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"price-range\">Price range</label>\r\n          <input\r\n            value={priceRange}\r\n            onChange={(e) => setPriceRange(e.target.value)}\r\n            id=\"price-range\"\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            min=\"0\"\r\n            max=\"5\"\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          onClick={handleSubmit}\r\n          className=\"btn btn-primary\"\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\jonat\\OneDrive\\Documents\\yelp\\client\\src\\components\\StarRating.tsx",[],"C:\\Users\\jonat\\OneDrive\\Documents\\yelp\\client\\src\\components\\Reviews.tsx",[],"C:\\Users\\jonat\\OneDrive\\Documents\\yelp\\client\\src\\components\\AddReview.tsx",["79"],"import React, { useState } from \"react\";\r\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\r\nimport RestaurantFinder from \"../apis/RestaurantFinder\";\r\n\r\ninterface AddReviewProps {}\r\n\r\nexport const AddReview: React.FC<AddReviewProps> = ({}) => {\r\n  const { id } = useParams<any>();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [name, setName] = useState(\"\");\r\n  const [rating, setRating] = useState(\"\");\r\n  const [review, setReview] = useState(\"\");\r\n  const handleSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    try {\r\n      await RestaurantFinder.post(`/${id}/addReview`, {\r\n        name: name,\r\n        review: review,\r\n        rating: rating,\r\n      });\r\n      history.push(\"/\");\r\n      history.push(location.pathname);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"mb-2\">\r\n      <form>\r\n        <div className=\"form-row\">\r\n          <div className=\"form group col-8\">\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n              }}\r\n              id=\"name\"\r\n              placeholder=\"Name\"\r\n              className=\"form-control\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group col-4\">\r\n            <label htmlFor=\"rating\">Rating</label>\r\n            <select\r\n              id=\"rating\"\r\n              className=\"custom-select\"\r\n              value={rating}\r\n              onChange={(e) => {\r\n                setRating(e.target.value);\r\n              }}\r\n            >\r\n              <option value=\"1\">1</option>\r\n              <option value=\"2\">2</option>\r\n              <option value=\"3\">3</option>\r\n              <option value=\"4\">4</option>\r\n              <option value=\"5\">5</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"review\">Review</label>\r\n          <textarea\r\n            value={review}\r\n            onChange={(e) => {\r\n              setReview(e.target.value);\r\n            }}\r\n            id=\"review\"\r\n            className=\"form-control\"\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          onClick={(e) => handleSubmit(e)}\r\n          className=\"btn btn-primary\"\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n",{"ruleId":"80","severity":1,"message":"81","line":5,"column":47,"nodeType":"82","messageId":"83","endLine":5,"endColumn":49},{"ruleId":"80","severity":1,"message":"81","line":8,"column":43,"nodeType":"82","messageId":"83","endLine":8,"endColumn":45},{"ruleId":"80","severity":1,"message":"81","line":7,"column":61,"nodeType":"82","messageId":"83","endLine":7,"endColumn":63},{"ruleId":"80","severity":1,"message":"81","line":11,"column":75,"nodeType":"82","messageId":"83","endLine":11,"endColumn":77},{"ruleId":"84","severity":1,"message":"85","line":26,"column":6,"nodeType":"86","endLine":26,"endColumn":8,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":1,"column":10,"nodeType":"90","messageId":"91","endLine":1,"endColumn":15},{"ruleId":"80","severity":1,"message":"81","line":10,"column":63,"nodeType":"82","messageId":"83","endLine":10,"endColumn":65},{"ruleId":"84","severity":1,"message":"92","line":23,"column":6,"nodeType":"86","endLine":23,"endColumn":8,"suggestions":"93"},{"ruleId":"88","severity":1,"message":"94","line":28,"column":13,"nodeType":"90","messageId":"91","endLine":28,"endColumn":21},{"ruleId":"88","severity":1,"message":"95","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":28},{"ruleId":"80","severity":1,"message":"81","line":10,"column":34,"nodeType":"82","messageId":"83","endLine":10,"endColumn":36},{"ruleId":"96","severity":2,"message":"97","line":12,"column":6,"nodeType":"98","endLine":12,"endColumn":32},{"ruleId":"80","severity":1,"message":"81","line":6,"column":55,"nodeType":"82","messageId":"83","endLine":6,"endColumn":57},{"ruleId":"80","severity":1,"message":"81","line":9,"column":67,"nodeType":"82","messageId":"83","endLine":9,"endColumn":69},{"ruleId":"84","severity":1,"message":"99","line":27,"column":6,"nodeType":"86","endLine":27,"endColumn":8,"suggestions":"100"},{"ruleId":"88","severity":1,"message":"101","line":31,"column":11,"nodeType":"90","messageId":"91","endLine":31,"endColumn":28},{"ruleId":"80","severity":1,"message":"81","line":7,"column":53,"nodeType":"82","messageId":"83","endLine":7,"endColumn":55},"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'setSelectedRestaurant'. Either include them or remove the dependency array.","ArrayExpression",["102"],"@typescript-eslint/no-unused-vars","'spawn' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'setRestaurants'. Either include it or remove the dependency array.",["103"],"'response' is assigned a value but never used.","'RestaurantsContext' is defined but never used.","react/jsx-no-undef","'RestaurantsContextProvider' is not defined.","JSXIdentifier","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["104"],"'updatedRestaurant' is assigned a value but never used.",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [id, setSelectedRestaurant]",{"range":"111","text":"112"},"Update the dependencies array to be: [setRestaurants]",{"range":"113","text":"114"},"Update the dependencies array to be: [id]",{"range":"115","text":"116"},[931,933],"[id, setSelectedRestaurant]",[812,814],"[setRestaurants]",[936,938],"[id]"]